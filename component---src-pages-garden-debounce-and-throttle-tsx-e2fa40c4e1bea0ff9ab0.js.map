{"version":3,"file":"component---src-pages-garden-debounce-and-throttle-tsx-e2fa40c4e1bea0ff9ab0.js","mappings":"iPAmEA,EA1D4B,WAC3B,OAA8BA,EAAAA,EAAAA,UAAc,MAArCC,EAAO,KAAEC,EAAU,KAEpBC,GAAYC,EAAAA,EAAAA,QAAY,MAExBC,GAAiBC,EAAAA,EAAAA,cAAY,WAClC,GAAIH,GAAaA,EAAUI,QAAS,OAC7BC,EAA8B,QAApB,EAAGL,EAAUI,eAAO,aAAjBE,EAAmBC,MAEtCC,EAXyB,gDAUSH,EAEnC,CACD,GAAG,IAEGG,EAAe,mCAAG,WAAOC,GAAW,iEACzCC,MAAMD,GACJE,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAM,IAC1BF,MAAK,SAACE,GAAI,OAAKC,EAAcD,EAAK,IAClCF,MAAK,SAACI,GAAc,OAAKhB,EAAWgB,EAAe,IAAE,2CACvD,gBALoB,sCAmBrB,OADAC,QAAQC,IAAI,CAAEnB,QAAAA,IAEboB,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAU,kCACjBF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,iBACdF,EAAAA,cAAAA,QAAAA,CACCG,KAAK,OACLC,IAAKtB,EACLuB,SAAU,kBC/CiB,SAACC,EAA4BC,QAAK,IAALA,IAAAA,EAAQ,KACpE,IAAIC,GAAO,EACPC,EAA0B,KAExBC,EAAkB,SAAlBA,IACe,OAAhBD,EACHD,GAAO,GAEPF,EAAQ,qBAAIG,IACZA,EAAc,KACdE,WAAWD,EAAiBH,GAE9B,EAIA,OAFAT,QAAQC,IAAIS,GAEL,WAAqB,IAAD,uBAAhBI,EAAI,yBAAJA,EAAI,gBACVJ,EACHC,EAAcA,EAAW,kBAAOA,GAAgBG,GAAQA,GAIzDN,EAAQ,aAAIM,GACZJ,GAAO,EACPV,QAAQC,IAAI,CAAES,KAAAA,EAAMD,MAAAA,IACpBI,WAAWD,EAAiBH,GAC7B,CACD,CDoBqBM,CAAiB7B,EAAgB,IAAjC6B,EAAwC,EACxDX,UAAS,iBAAkBtB,EAAU,UAAY,MAEjDA,GACAoB,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,kBACZY,OAAOC,KAAKnC,GAASoC,KAAI,SAACC,EAAcC,GAC3BtC,EAAQqC,GACrB,OACCjB,EAAAA,cAAAA,KAAAA,CAAIkB,IAAKA,EAAKC,QAAS,WAA6B,GAClDF,EAGJ,MAMN,EAIaG,EAAe,WAAH,OAASpB,EAAAA,cAAAA,QAAAA,KAAAA,wBAAoC,EAIhEJ,EAAgB,SAAChB,GAAiB,MAGjCyC,EAAoB,QAAhB,EAAGzC,aAAO,EAAPA,EAASyC,YAAI,QAAI,KAE9B,GAAKA,EAAL,CAUA,IAAMC,EAAkC,CAAC,EACzCxB,QAAQC,IAAI,CAAEsB,KAAAA,IACd,IAAK,IAAIE,EAAI,EAAGC,EAAIH,EAAKI,OAAQF,EAAIC,EAAGD,IAAK,OACtCG,EAAmDL,EAAKE,GACxDN,EAAgB,QAAZ,EAAGS,aAAG,EAAHA,EAAKT,YAAI,QAAI,KACtBA,GAAQK,GAAiBA,EAAcL,GAC1CK,EAAcI,EAAIT,MAAMU,KAAKD,EAAIR,KAEjCI,EAAcI,EAAIT,MAAQ,CAACS,EAAIR,IAEjC,CAEA,OAAOI,CAtBU,CAuBlB,C","sources":["webpack://portfolio/./src/pages/garden/debounce-and-throttle.tsx","webpack://portfolio/./src/helpers/throttleFunction.ts"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { HeadFC } from \"gatsby\";\r\nimport { Layout } from \"../../components/Layout\";\r\nimport { throttleFunction } from \"../../helpers/throttleFunction\";\r\n\r\nconst tempUrl = \"http://openlibrary.org/search/authors.json?q=twain\";\r\nconst limit = \"&limit=5\";\r\nconst authorSearchURLBase = \"http://openlibrary.org/search/authors.json?q=\";\r\n\r\nconst debounceAndThrottle = () => {\r\n\tconst [authors, setauthors] = useState<any>(null);\r\n\r\n\tconst searchRef = useRef<any>(null);\r\n\r\n\tconst handleOnChange = useCallback(() => {\r\n\t\tif (searchRef && searchRef.current) {\r\n\t\t\tconst searchTerm = searchRef.current?.value;\r\n\t\t\tconst url = authorSearchURLBase + searchTerm;\r\n\t\t\tfetchAllAuthors(url);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst fetchAllAuthors = async (url: string) => {\r\n\t\tfetch(url)\r\n\t\t\t.then((resp) => resp.json())\r\n\t\t\t.then((json) => mutateauthors(json))\r\n\t\t\t.then((mutatedauthors) => setauthors(mutatedauthors));\r\n\t};\r\n\r\n\tconst fetchAuthorsBooks = async (url: string) => {\r\n\t\tfetch(url)\r\n\t\t\t.then((resp) => resp.json())\r\n\t\t\t.then((json) => mutateauthors(json))\r\n\t\t\t.then((mutatedauthors) => setauthors(mutatedauthors));\r\n\t};\r\n\r\n\tconst handleAuthorClick = (keys: string[]) => {\r\n\t\t// loop over keys\r\n\t\t// fetch authors book collection per key\r\n\t};\r\n\tconsole.log({ authors });\r\n\treturn (\r\n\t\t<Layout className=\"garden__page debounce-throttle\">\r\n\t\t\t<div className=\"search__panel\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tref={searchRef}\r\n\t\t\t\t\tonChange={() => throttleFunction(handleOnChange, 2000)()}\r\n\t\t\t\t\tclassName={`input search ${authors ? \"results\" : \"\"}`}\r\n\t\t\t\t/>\r\n\t\t\t\t{authors && (\r\n\t\t\t\t\t<ul className=\"search__result\">\r\n\t\t\t\t\t\t{Object.keys(authors).map((name: string, key: number) => {\r\n\t\t\t\t\t\t\tconst keys = authors[name];\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li key={key} onClick={() => handleAuthorClick(keys)}>\r\n\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default debounceAndThrottle;\r\n\r\nexport const Head: HeadFC = () => <title>Debounce and Throttle</title>;\r\n\r\n// Helpers\r\n\r\nconst mutateauthors = (authors: any) => {\r\n\t// Want unique names only\r\n\t// Save all like names key's together\r\n\tconst docs = authors?.docs ?? null;\r\n\r\n\tif (!docs) return;\r\n\r\n\t// loop through docs\r\n\t// check if name exists in saved names\r\n\t// yes? push to this array\r\n\t// no? create this prop\r\n\r\n\ttype AuthorObj = string[];\r\n\ttype UniqueAuthorsObj = { [key: string]: AuthorObj };\r\n\r\n\tconst uniqueAuthors: UniqueAuthorsObj = {};\r\n\tconsole.log({ docs \t});\r\n\tfor (let i = 0, n = docs.length; i < n; i++) {\r\n\t\tconst doc: { key: string; type: string; name: string } = docs[i];\r\n\t\tconst name = doc?.name ?? null;\r\n\t\tif (name && uniqueAuthors && uniqueAuthors[name]) {\r\n\t\t\tuniqueAuthors[doc.name].push(doc.key);\r\n\t\t} else {\r\n\t\t\tuniqueAuthors[doc.name] = [doc.key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn uniqueAuthors;\r\n};\r\n\r\n// {\r\n//     \"numFound\": 2,\r\n//     \"start\": 0,\r\n//     \"numFoundExact\": true,\r\n//     \"docs\": [\r\n//         {\r\n//             \"key\": \"OL10300116A\",\r\n//             \"type\": \"author\",\r\n//             \"name\": \"kingd book\",\r\n//             \"work_count\": 0,\r\n//             \"_version_\": 1735682755626270700\r\n//         },\r\n//         {\r\n//             \"key\": \"OL10531727A\",\r\n//             \"type\": \"author\",\r\n//             \"name\": \"The L&#551;st Kingd&#559;m\",\r\n//             \"work_count\": 0,\r\n//             \"_version_\": 1738814813660774400\r\n//         }\r\n//     ]\r\n// }\r\n","export const throttleFunction = (callBack: (e?: any) => any, delay = 1000) => {\r\n\tlet wait = false;\r\n\tlet waitingArgs: null | any = null;\r\n\r\n\tconst timeoutFunction = () => {\r\n\t\tif (waitingArgs === null) {\r\n\t\t\twait = false;\r\n\t\t} else {\r\n\t\t\tcallBack(...waitingArgs);\r\n\t\t\twaitingArgs = null;\r\n\t\t\tsetTimeout(timeoutFunction, delay);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log(wait);\r\n\r\n\treturn (...args: any[]) => {\r\n\t\tif (wait) {\r\n\t\t\twaitingArgs = waitingArgs ? [...waitingArgs, ...args] : args;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallBack(...args);\r\n\t\twait = true; // Waarom???\r\n\t\tconsole.log({ wait, delay });\r\n\t\tsetTimeout(timeoutFunction, delay);\r\n\t};\r\n};\r\n"],"names":["useState","authors","setauthors","searchRef","useRef","handleOnChange","useCallback","current","searchTerm","_searchRef$current","value","fetchAllAuthors","url","fetch","then","resp","json","mutateauthors","mutatedauthors","console","log","React","Layout","className","type","ref","onChange","callBack","delay","wait","waitingArgs","timeoutFunction","setTimeout","args","throttleFunction","Object","keys","map","name","key","onClick","Head","docs","uniqueAuthors","i","n","length","doc","push"],"sourceRoot":""}