{"version":3,"file":"component---src-pages-404-index-tsx-086579d6b066f79830f5.js","mappings":"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","sources":["webpack://portfolio/./src/components/Header/MenuButton.tsx","webpack://portfolio/./src/components/Header/Nav.tsx","webpack://portfolio/./src/components/Header/index.tsx","webpack://portfolio/./src/components/Footer/index.tsx","webpack://portfolio/./src/components/Layout/index.tsx","webpack://portfolio/./src/contexts/SkillsContext.tsx","webpack://portfolio/./src/pages/404/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./menuButton.scss\";\r\n\r\ninterface MenuButtonProps {\r\n\ttoggleMenu: () => void;\r\n\topen: boolean;\r\n}\r\n\r\nexport function MenuButton({ toggleMenu, open }: MenuButtonProps) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`menu__button ${open ? \"open\" : \"\"}`}\r\n\t\t\tid=\"hamburger\"\r\n\t\t\tonClick={toggleMenu}\r\n\t\t>\r\n\t\t\t<span></span>\r\n\t\t\t<span></span>\r\n\t\t\t<span></span>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { Link } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport { PagesType, PageType } from \"../../types/PagesTypes\";\r\nimport { MenuButton } from \"./MenuButton\";\r\nimport \"./nav.scss\";\r\n\r\nconst pages: PagesType = [\r\n\t{ name: \"home\", url: \"/\" },\r\n\t{ name: \"projects\", url: \"/projects\" },\r\n\t{ name: \"resume\", url: \"/resume\" },\r\n\t// { name: \"fun\", url: \"/fun\" },\r\n];\r\n\r\nexport default function Nav() {\r\n\tconst [menuOpen, setMenuOpen] = useState(false);\r\n\tconst toggleMenu = () => {\r\n\t\tsetMenuOpen(!menuOpen);\r\n\t};\r\n\treturn (\r\n\t\t<nav className={menuOpen ? \"open\" : \"\"}>\r\n\t\t\t<MenuButton toggleMenu={toggleMenu} open={menuOpen} />\r\n\t\t\t<ul>\r\n\t\t\t\t{pages.map((page: PageType) => (\r\n\t\t\t\t\t<li key={page.url}>\r\n\t\t\t\t\t\t<Link to={page.url} activeClassName=\"active\">\r\n\t\t\t\t\t\t\t{page.name}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { PagesType } from \"../../types/PagesTypes\";\r\nimport \"./header.scss\";\r\nimport Nav from \"./Nav\";\r\n\r\nexport const Header = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<Link to=\"/\" className=\"header__info\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<h1>Amelia</h1>\r\n\t\t\t\t\t<p>Australian with working rights in the Netherlands</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<em>Ik ben Nederlands aan het leren</em>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</span>\r\n\t\t\t</Link>\r\n\t\t\t<Nav />\r\n\t\t</header>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nexport const Footer = () => {\r\n\treturn <footer></footer>;\r\n};\r\n","import React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tcreateContext,\r\n\tuseState,\r\n\tuseContext,\r\n\tuseMemo,\r\n} from \"react\";\r\nimport \"../../scss/main.scss\";\r\n\r\nimport { Header } from \"../Header\";\r\nimport { Footer } from \"../Footer\";\r\nimport \"./layout.scss\";\r\nimport { SkillsContext, SkillsWrapper } from \"../../contexts/SkillsContext\";\r\nimport { SkillsType } from \"../../types/SkillsTypes\";\r\n\r\ninterface LayoutProps {\r\n\tchildren: any;\r\n\tclassName?: string;\r\n}\r\n\r\n// const initialState = { skills: null, setSkills: () => {} };\r\n\r\n// export const SkillsContext = createContext<{\r\n// \tskills: Array<string> | null;\r\n// \tsetSkills: (e: Array<string> | null) => void;\r\n// }>(initialState);\r\n\r\nexport const Layout = ({ children, className = \"\" }: LayoutProps) => {\r\n\treturn (\r\n\t\t<SkillsWrapper>\r\n\t\t\t<div className={`${className} body auto-dark-mode `}>\r\n\t\t\t\t<div className=\"layout__wrapper\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<main className={className ?? \"\"}>{children}</main>\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</SkillsWrapper>\r\n\t);\r\n};\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { SkillsType, SkillType } from \"../types/SkillsTypes\";\r\n\r\nconst initialState = null;\r\n\r\nexport const SkillsContext = createContext<SkillsType | null>(null);\r\n\r\nexport const SkillsWrapper = ({ children }: any) => {\r\n\tconst [skills, setSkills] = useState<SkillsType | null>(null);\r\n\tuseEffect(() => {\r\n\t\tconst windowUrl = window.location.search;\r\n\t\tconst params = new URLSearchParams(windowUrl);\r\n\t\tconst skillsParams = params.getAll(\"skill\");\r\n\t\tconst skillsStored = window.localStorage.getItem(\"skills\");\r\n\t\tconst savedSkills = skillsStored ? JSON.parse(skillsStored) : null;\r\n\r\n\t\tconsole.log({ skillsParams });\r\n\t\t// If URL contains skills and skills have already been saved to sessionStorage\r\n\t\t// If they don't match, new URL params should replace old saved skills\r\n\t\tif (skillsParams.length > 0 && !savedSkills) {\r\n\t\t\tconsole.log(skillsParams.length);\r\n\r\n\t\t\twindow.localStorage.setItem(\"skills\", JSON.stringify(skillsParams));\r\n\t\t\tsetSkills(skillsParams);\r\n\t\t} else if (\r\n\t\t\tskillsParams.length > 0 &&\r\n\t\t\tsavedSkills &&\r\n\t\t\tskillsParams.join() !== savedSkills.join()\r\n\t\t) {\r\n\t\t\twindow.localStorage.setItem(\"skills\", JSON.stringify(skillsParams));\r\n\r\n\t\t\tsetSkills(skillsParams);\r\n\t\t} else if (skillsParams.length <= 0) {\r\n\t\t\tsetSkills(savedSkills);\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<SkillsContext.Provider value={skills}>{children}</SkillsContext.Provider>\r\n\t);\r\n};\r\n","import * as React from \"react\";\r\nimport { Link, HeadFC } from \"gatsby\";\r\nimport { Layout } from \"../../components/Layout\";\r\n\r\nconst NotFoundPage = () => {\r\n\treturn (\r\n\t\t<Layout className=\"error-page\">\r\n\t\t\tWhoops <Link to=\"/\">Go home</Link>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default NotFoundPage;\r\n\r\nexport const Head: HeadFC = () => <title>Not found</title>;\r\n"],"names":["MenuButton","toggleMenu","open","React","className","id","onClick","pages","name","url","Nav","useState","menuOpen","setMenuOpen","map","page","key","Link","to","activeClassName","Header","Footer","Layout","children","SkillsWrapper","SkillsContext","createContext","skills","setSkills","useEffect","windowUrl","window","location","search","skillsParams","URLSearchParams","getAll","skillsStored","localStorage","getItem","savedSkills","JSON","parse","console","log","length","setItem","stringify","join","Provider","value","Head"],"sourceRoot":""}